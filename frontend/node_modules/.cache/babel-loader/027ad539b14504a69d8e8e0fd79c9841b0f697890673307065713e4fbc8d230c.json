{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BrandDropdown from \"../components/BrandDropdown\";\nimport ItemDropdown from \"../components/ItemDropdown\";\nimport apiClient from \"../api/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [brands, setBrands] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n\n  // Fetch brands when component loads\n  useEffect(() => {\n    apiClient.get(\"/brands\").then(response => {\n      setBrands(response.data); // Assuming response is an array of brands\n    }).catch(error => {\n      console.error(\"Error fetching brands:\", error);\n    });\n  }, []);\n\n  // Fetch items based on selected brand name\n  const handleBrandChange = event => {\n    const brandName = event.target.value; // Get the selected brand name\n    setSelectedBrand(brandName);\n    if (brandName) {\n      apiClient.get(`/items/by-brand//${encodeURIComponent(brandName)}`) // Pass brand name in the URL\n      .then(response => {\n        setItems(response.data); // Assuming response is an array of items\n      }).catch(error => {\n        console.error(\"Error fetching items:\", error);\n      });\n    } else {\n      setItems([]); // Clear items if no brand is selected\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brand and Item Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrandDropdown, {\n      brands: brands,\n      onChange: handleBrandChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemDropdown, {\n      items: items,\n      disabled: !selectedBrand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"8kvVVesKwD+iT2dLC11zn4PBor0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","BrandDropdown","ItemDropdown","apiClient","jsxDEV","_jsxDEV","Home","_s","brands","setBrands","items","setItems","selectedBrand","setSelectedBrand","get","then","response","data","catch","error","console","handleBrandChange","event","brandName","target","value","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BrandDropdown from \"../components/BrandDropdown\";\nimport ItemDropdown from \"../components/ItemDropdown\";\nimport apiClient from \"../api/apiClient\";\n\nconst Home = () => {\n  const [brands, setBrands] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n\n  // Fetch brands when component loads\n  useEffect(() => {\n    apiClient.get(\"/brands\")\n      .then((response) => {\n        setBrands(response.data); // Assuming response is an array of brands\n      })\n      .catch((error) => {\n        console.error(\"Error fetching brands:\", error);\n      });\n  }, []);\n\n  // Fetch items based on selected brand name\n  const handleBrandChange = (event) => {\n    const brandName = event.target.value; // Get the selected brand name\n    setSelectedBrand(brandName);\n  \n    if (brandName) {\n      apiClient.get(`/items/by-brand//${encodeURIComponent(brandName)}`) // Pass brand name in the URL\n        .then((response) => {\n          setItems(response.data); // Assuming response is an array of items\n        })\n        .catch((error) => {\n          console.error(\"Error fetching items:\", error);\n        });\n    } else {\n      setItems([]); // Clear items if no brand is selected\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Brand and Item Selector</h1>\n      <BrandDropdown brands={brands} onChange={handleBrandChange} />\n      <ItemDropdown items={items} disabled={!selectedBrand} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdG,SAAS,CAACW,GAAG,CAAC,SAAS,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAK;MAClBP,SAAS,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IACtCZ,gBAAgB,CAACU,SAAS,CAAC;IAE3B,IAAIA,SAAS,EAAE;MACbpB,SAAS,CAACW,GAAG,CAAC,oBAAoBY,kBAAkB,CAACH,SAAS,CAAC,EAAE,CAAC,CAAC;MAAA,CAChER,IAAI,CAAEC,QAAQ,IAAK;QAClBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,MAAM;MACLR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAGD,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC1B,OAAA,CAACJ,aAAa;MAACO,MAAM,EAAEA,MAAO;MAACwB,QAAQ,EAAEX;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9D1B,OAAA,CAACH,YAAY;MAACQ,KAAK,EAAEA,KAAM;MAACuB,QAAQ,EAAE,CAACrB;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}