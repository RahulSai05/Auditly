{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Entry</h1>\n//       <p className=\"instruction\">\n//         Please enter the Serial Number or Return Order Number below to retrieve the details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Order Number/Serial Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Proceed to Return \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualScanPage = () => {\n  _s();\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const {\n    setCustomerItemId\n  } = useContext(InspectionContext); // Context for storing ID\n  const navigate = useNavigate();\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: {\n          order_number: orderNumber\n        }\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        setCustomerItemId(response.data.customer_id); // Save customer_item_data_id in context\n        setError(\"\");\n      }\n    } catch (err) {\n      console.error(\"API error:\", err);\n      setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n      setData(null);\n    }\n  };\n  const handleProceed = () => {\n    navigate(\"/inspection\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manual-scan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manual Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\",\n      children: \"Enter the Serial or Return Order Number below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Order Number/Serial Number\",\n        value: orderNumber,\n        onChange: e => setOrderNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchItemDetails,\n        disabled: !orderNumber,\n        children: \"Fetch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-box\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"proceed-button\",\n        onClick: handleProceed,\n        children: \"Proceed to Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualScanPage, \"5mIL966kATUvIF2DEg/IcoCq6jA=\", false, function () {\n  return [useNavigate];\n});\n_c = ManualScanPage;\nexport default ManualScanPage;\nvar _c;\n$RefreshReg$(_c, \"ManualScanPage\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","InspectionContext","axios","jsxDEV","_jsxDEV","ManualScanPage","_s","orderNumber","setOrderNumber","data","setData","error","setError","setCustomerItemId","navigate","fetchItemDetails","response","get","params","order_number","status","customer_id","err","console","handleProceed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Entry</h1>\n//       <p className=\"instruction\">\n//         Please enter the Serial Number or Return Order Number below to retrieve the details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Order Number/Serial Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Proceed to Return \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\n\nconst ManualScanPage = () => {\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const { setCustomerItemId } = useContext(InspectionContext); // Context for storing ID\n  const navigate = useNavigate();\n\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: { order_number: orderNumber },\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        setCustomerItemId(response.data.customer_id); // Save customer_item_data_id in context\n        setError(\"\");\n      }\n    } catch (err) {\n      console.error(\"API error:\", err);\n      setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n      setData(null);\n    }\n  };\n\n  const handleProceed = () => {\n    navigate(\"/inspection\");\n  };\n\n  return (\n    <div className=\"manual-scan-page\">\n      <h1>Manual Entry</h1>\n      <p className=\"instruction\">Enter the Serial or Return Order Number below.</p>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Order Number/Serial Number\"\n          value={orderNumber}\n          onChange={(e) => setOrderNumber(e.target.value)}\n        />\n        <button onClick={fetchItemDetails} disabled={!orderNumber}>\n          Fetch Details\n        </button>\n      </div>\n      {error && <div className=\"error-box\">{error}</div>}\n      {data && (\n        <div>\n          {/* Render item details */}\n          <button className=\"proceed-button\" onClick={handleProceed}>\n            Proceed to Inspection\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManualScanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}