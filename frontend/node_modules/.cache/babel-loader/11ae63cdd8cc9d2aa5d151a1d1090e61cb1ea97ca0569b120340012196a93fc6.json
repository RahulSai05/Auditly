{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Scan</h1>\n//       <p className=\"instruction\">\n//         Enter the Serial Number or Return Order Number below to fetch details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Serial or Return Order Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Next \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualScanPage = () => {\n  _s();\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: {\n          order_number: orderNumber\n        }\n      });\n      if (response.status === 200) {\n        const responseData = response.data;\n        setData(responseData);\n\n        // Redirect to Upload Images page with customer_id\n        navigate(`/upload-images?customerId=${responseData.customer_id}`);\n      }\n    } catch (err) {\n      console.error(\"Error fetching details:\", err);\n      setError(\"Unable to fetch details. Please verify the order number.\");\n      setData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manual-scan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manual Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\",\n      children: \"Enter the Serial Number or Return Order Number below to fetch details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Serial or Return Order Number\",\n          value: orderNumber,\n          onChange: e => setOrderNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchItemDetails,\n          disabled: !orderNumber,\n          children: \"Fetch Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-box\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Item Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 24\n        }, this), \" \", data.customer_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(ManualScanPage, \"O23DzroLzVKG26fmKGGIN5lLGQ4=\", false, function () {\n  return [useNavigate];\n});\n_c = ManualScanPage;\nexport default ManualScanPage;\nvar _c;\n$RefreshReg$(_c, \"ManualScanPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","ManualScanPage","_s","orderNumber","setOrderNumber","data","setData","error","setError","navigate","fetchItemDetails","response","get","params","order_number","status","responseData","customer_id","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Scan</h1>\n//       <p className=\"instruction\">\n//         Enter the Serial Number or Return Order Number below to fetch details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Serial or Return Order Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Next \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\n\nconst ManualScanPage = () => {\n    const [orderNumber, setOrderNumber] = useState(\"\");\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const fetchItemDetails = async () => {\n        try {\n            const response = await axios.get(\n                `http://localhost:8000/item_order_instance`,\n                { params: { order_number: orderNumber } }\n            );\n            if (response.status === 200) {\n                const responseData = response.data;\n                setData(responseData);\n\n                // Redirect to Upload Images page with customer_id\n                navigate(`/upload-images?customerId=${responseData.customer_id}`);\n            }\n        } catch (err) {\n            console.error(\"Error fetching details:\", err);\n            setError(\"Unable to fetch details. Please verify the order number.\");\n            setData(null);\n        }\n    };\n\n    return (\n        <div className=\"manual-scan-page\">\n            <h1>Manual Scan</h1>\n            <p className=\"instruction\">\n                Enter the Serial Number or Return Order Number below to fetch details.\n            </p>\n            <div className=\"input-container\">\n                <div className=\"input-wrapper\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter Serial or Return Order Number\"\n                        value={orderNumber}\n                        onChange={(e) => setOrderNumber(e.target.value)}\n                    />\n                    <button onClick={fetchItemDetails} disabled={!orderNumber}>\n                        Fetch Details\n                    </button>\n                </div>\n            </div>\n            {error && <div className=\"error-box\">{error}</div>}\n            {data && (\n                <div className=\"details-container\">\n                    <h2>Item Details</h2>\n                    {/* Display other details if needed */}\n                    <p><strong>Customer ID:</strong> {data.customer_id}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ManualScanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}