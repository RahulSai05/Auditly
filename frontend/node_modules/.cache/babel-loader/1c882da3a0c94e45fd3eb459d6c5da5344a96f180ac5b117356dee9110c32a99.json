{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Entry</h1>\n//       <p className=\"instruction\">\n//         Please enter the Serial Number or Return Order Number below to retrieve the details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Order Number/Serial Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Proceed to Return \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualScanPage = () => {\n  _s();\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const {\n    setCustomerItemId\n  } = useContext(InspectionContext); // Access context\n  const navigate = useNavigate();\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: {\n          order_number: orderNumber\n        }\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        setError(\"\");\n      }\n    } catch (err) {\n      var _err$response;\n      console.error(\"API error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404 ? \"Order not found. Please verify the Serial or Return Order Number.\" : \"An unexpected error occurred. Please try again.\");\n      setData(null);\n    }\n  };\n  const handleProceed = () => {\n    if (data !== null && data !== void 0 && data.customer_id) {\n      setCustomerItemId(data.customer_id); // Save customer ID to context\n      navigate(\"/inspection\");\n    } else {\n      setError(\"Customer ID is missing. Please fetch details first.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manual-scan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manual Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\",\n      children: \"Please enter the Serial Number or Return Order Number below to retrieve the details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Order Number/Serial Number\",\n          value: orderNumber,\n          onChange: e => setOrderNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchItemDetails,\n          disabled: !orderNumber,\n          children: \"Fetch Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-box\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProceed,\n        className: \"proceed-button\",\n        children: \"Proceed to Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualScanPage, \"5mIL966kATUvIF2DEg/IcoCq6jA=\", false, function () {\n  return [useNavigate];\n});\n_c = ManualScanPage;\nexport default ManualScanPage;\nvar _c;\n$RefreshReg$(_c, \"ManualScanPage\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","InspectionContext","axios","jsxDEV","_jsxDEV","ManualScanPage","_s","orderNumber","setOrderNumber","data","setData","error","setError","setCustomerItemId","navigate","fetchItemDetails","response","get","params","order_number","status","err","_err$response","console","handleProceed","customer_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   const handleProceed = () => {\n//     navigate(\"/inspection\");\n//   };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Entry</h1>\n//       <p className=\"instruction\">\n//         Please enter the Serial Number or Return Order Number below to retrieve the details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Order Number/Serial Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Proceed to Return \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport axios from \"axios\";\nimport \"../styles/ManualScanPage.css\";\n\nconst ManualScanPage = () => {\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const { setCustomerItemId } = useContext(InspectionContext); // Access context\n  const navigate = useNavigate();\n\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: { order_number: orderNumber },\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        setError(\"\");\n      }\n    } catch (err) {\n      console.error(\"API error:\", err);\n      setError(\n        err.response?.status === 404\n          ? \"Order not found. Please verify the Serial or Return Order Number.\"\n          : \"An unexpected error occurred. Please try again.\"\n      );\n      setData(null);\n    }\n  };\n\n  const handleProceed = () => {\n    if (data?.customer_id) {\n      setCustomerItemId(data.customer_id); // Save customer ID to context\n      navigate(\"/inspection\");\n    } else {\n      setError(\"Customer ID is missing. Please fetch details first.\");\n    }\n  };\n\n  return (\n    <div className=\"manual-scan-page\">\n      <h1>Manual Entry</h1>\n      <p className=\"instruction\">\n        Please enter the Serial Number or Return Order Number below to retrieve the details.\n      </p>\n      <div className=\"input-container\">\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Order Number/Serial Number\"\n            value={orderNumber}\n            onChange={(e) => setOrderNumber(e.target.value)}\n          />\n          <button onClick={fetchItemDetails} disabled={!orderNumber}>\n            Fetch Details\n          </button>\n        </div>\n      </div>\n      {error && <div className=\"error-box\">{error}</div>}\n      {data && (\n        <div className=\"details-container\">\n          {/* Render details */}\n          <button onClick={handleProceed} className=\"proceed-button\">\n            Proceed to Inspection\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManualScanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}