{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/UploadImagesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/UploadImagesPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImagesPage = () => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [frontImage, setFrontImage] = useState(null);\n  const [backImage, setBackImage] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n  const [isUploadSuccessful, setIsUploadSuccessful] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!id || !frontImage || !backImage) {\n      setNotification(\"Please provide an ID and both images.\");\n      setIsUploadSuccessful(false);\n      setTimeout(() => setNotification(\"\"), 1500); // Clear after 1.5 seconds\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"front_image\", frontImage);\n    formData.append(\"back_image\", backImage);\n    try {\n      const response = await axios.post(`http://localhost:8000/upload-customer-images?id=${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        setNotification(\"Images uploaded successfully!\");\n        setIsUploadSuccessful(true);\n      } else {\n        setNotification(\"Failed to upload images. Please try again.\");\n        setIsUploadSuccessful(false);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error uploading images:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      setNotification(\"An unexpected error occurred while uploading images.\");\n      setIsUploadSuccessful(false);\n    }\n    setTimeout(() => setNotification(\"\"), 1500); // Clear notification\n  };\n  const handleBack = () => {\n    window.history.back(); // Navigate back to the previous page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-images-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"Customer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          placeholder: \"Enter Customer ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"front-image\",\n          children: \"Front Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"front-image\",\n          accept: \"image/*\",\n          onChange: e => setFrontImage(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back-image\",\n          children: \"Back Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"back-image\",\n          accept: \"image/*\",\n          onChange: e => setBackImage(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button upload-button\",\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button back-button\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button proceed-button\",\n        disabled: !isUploadSuccessful,\n        children: \"Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadImagesPage, \"WiHRz2RYC73vUD4D/qGe3RaHeBs=\");\n_c = UploadImagesPage;\nexport default UploadImagesPage;\nvar _c;\n$RefreshReg$(_c, \"UploadImagesPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadImagesPage","_s","id","setId","frontImage","setFrontImage","backImage","setBackImage","notification","setNotification","isUploadSuccessful","setIsUploadSuccessful","handleSubmit","e","preventDefault","setTimeout","formData","FormData","append","response","post","headers","status","error","_error$response","console","data","handleBack","window","history","back","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","accept","files","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/UploadImagesPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/UploadImagesPage.css\";\n\nconst UploadImagesPage = () => {\n    const [id, setId] = useState(\"\");\n    const [frontImage, setFrontImage] = useState(null);\n    const [backImage, setBackImage] = useState(null);\n    const [notification, setNotification] = useState(\"\");\n    const [isUploadSuccessful, setIsUploadSuccessful] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!id || !frontImage || !backImage) {\n            setNotification(\"Please provide an ID and both images.\");\n            setIsUploadSuccessful(false);\n            setTimeout(() => setNotification(\"\"), 1500); // Clear after 1.5 seconds\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"front_image\", frontImage);\n        formData.append(\"back_image\", backImage);\n\n        try {\n            const response = await axios.post(\n                `http://localhost:8000/upload-customer-images?id=${id}`,\n                formData,\n                { headers: { \"Content-Type\": \"multipart/form-data\" } }\n            );\n\n            if (response.status === 200) {\n                setNotification(\"Images uploaded successfully!\");\n                setIsUploadSuccessful(true);\n            } else {\n                setNotification(\"Failed to upload images. Please try again.\");\n                setIsUploadSuccessful(false);\n            }\n        } catch (error) {\n            console.error(\"Error uploading images:\", error.response?.data || error);\n            setNotification(\"An unexpected error occurred while uploading images.\");\n            setIsUploadSuccessful(false);\n        }\n\n        setTimeout(() => setNotification(\"\"), 1500); // Clear notification\n    };\n\n    const handleBack = () => {\n        window.history.back(); // Navigate back to the previous page\n    };\n\n    return (\n        <div className=\"upload-images-page\">\n            <h1>Upload Images</h1>\n            <form onSubmit={handleSubmit} className=\"upload-form\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"id\">Customer ID:</label>\n                    <input\n                        type=\"text\"\n                        id=\"id\"\n                        value={id}\n                        onChange={(e) => setId(e.target.value)}\n                        placeholder=\"Enter Customer ID\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"front-image\">Front Image:</label>\n                    <input\n                        type=\"file\"\n                        id=\"front-image\"\n                        accept=\"image/*\"\n                        onChange={(e) => setFrontImage(e.target.files[0])}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"back-image\">Back Image:</label>\n                    <input\n                        type=\"file\"\n                        id=\"back-image\"\n                        accept=\"image/*\"\n                        onChange={(e) => setBackImage(e.target.files[0])}\n                        required\n                    />\n                </div>\n                <button type=\"submit\" className=\"button upload-button\">\n                    Upload Images\n                </button>\n            </form>\n            <div className=\"button-container\">\n                <button className=\"button back-button\" onClick={handleBack}>\n                    Back\n                </button>\n                <button\n                    className=\"button proceed-button\"\n                    disabled={!isUploadSuccessful}\n                >\n                    Proceed\n                </button>\n            </div>\n            {notification && <div className=\"notification\">{notification}</div>}\n        </div>\n    );\n};\n\nexport default UploadImagesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}