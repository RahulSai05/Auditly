{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   // const handleProceed = () => {\n//   //   navigate(\"/inspection\");\n//   // };\n\n//   const handleProceed = () => {\n//     if (data && data.id) {\n//         // Pass customerId as a query parameter\n//         navigate(`/upload-images?customerId=${data.id}`);\n//     } else {\n//         setError(\"Customer ID is missing. Please complete the scan first.\");\n//     }\n// };\n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Scan</h1>\n//       <p className=\"instruction\">\n//         Enter the Serial Number or Return Order Number below to fetch details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Serial or Return Order Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Next \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualScanPage = () => {\n  _s();\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchItemDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/item_order_instance`, {\n        params: {\n          order_number: orderNumber\n        }\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        setError(\"\");\n      } else {\n        setError(\"Failed to fetch item details.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching item details:\", err);\n      setError(\"An unexpected error occurred while fetching item details.\");\n      setData(null);\n    }\n  };\n  const handleProceed = () => {\n    if (data && data.id) {\n      console.log(\"Navigating with Customer ID:\", data.id);\n      navigate(`/upload-images?customerId=${data.id}`);\n    } else {\n      console.error(\"Data does not contain a valid Customer ID:\", data);\n      setError(\"Customer ID is missing. Please complete the scan first.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manual-scan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manual Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Serial or Return Order Number\",\n      value: orderNumber,\n      onChange: e => setOrderNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchItemDetails,\n      children: \"Fetch Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Customer ID: \", data.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProceed,\n        children: \"Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(ManualScanPage, \"O23DzroLzVKG26fmKGGIN5lLGQ4=\", false, function () {\n  return [useNavigate];\n});\n_c = ManualScanPage;\nexport default ManualScanPage;\nvar _c;\n$RefreshReg$(_c, \"ManualScanPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","ManualScanPage","_s","orderNumber","setOrderNumber","data","setData","error","setError","navigate","fetchItemDetails","response","get","params","order_number","status","err","console","handleProceed","id","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/ManualScanPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/ManualScanPage.css\";\n\n// const ManualScanPage = () => {\n//   const [orderNumber, setOrderNumber] = useState(\"\");\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const fetchItemDetails = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:8000/item_order_instance`, // Replace with your API endpoint\n//         { params: { order_number: orderNumber } }\n//       );\n//       if (response.status === 200) {\n//         setData(response.data);\n//         setError(\"\"); // Clear error if successful\n//       }\n//     } catch (err) {\n//       console.error(\"API error:\", err);\n//       if (err.response?.status === 404) {\n//         setError(\"Order not found. Please verify the Serial or Return Order Number.\");\n//       } else {\n//         setError(\"An unexpected error occurred. Please try again.\");\n//       }\n//       setData(null); // Clear data on error\n//     }\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   // const handleProceed = () => {\n//   //   navigate(\"/inspection\");\n//   // };\n\n//   const handleProceed = () => {\n//     if (data && data.id) {\n//         // Pass customerId as a query parameter\n//         navigate(`/upload-images?customerId=${data.id}`);\n//     } else {\n//         setError(\"Customer ID is missing. Please complete the scan first.\");\n//     }\n// };\n\n  \n\n//   return (\n//     <div className=\"manual-scan-page\">\n//       <h1>Manual Scan</h1>\n//       <p className=\"instruction\">\n//         Enter the Serial Number or Return Order Number below to fetch details.\n//       </p>\n//       <div className=\"input-container\">\n//         <div className=\"input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Serial or Return Order Number\"\n//             value={orderNumber}\n//             onChange={(e) => setOrderNumber(e.target.value)}\n//           />\n//           <button onClick={fetchItemDetails} disabled={!orderNumber}>\n//             Fetch Details\n//           </button>\n//         </div>\n//       </div>\n//       {error && <div className=\"error-box\">{error}</div>}\n//       {data && (\n//         <div className=\"details-container\">\n//           <h2>Item Details</h2>\n//           <div className=\"details-grid\">\n//             {/* General Information */}\n//             <div className=\"details-section\">\n//               <h3>General Information</h3>\n//               <p><strong>Original Sales Order:</strong> {data.original_sales_order_number}</p>\n//               <p><strong>Order Line:</strong> {data.original_sales_order_line}</p>\n//               <p><strong>Ordered Quantity:</strong> {data.ordered_qty}</p>\n//             </div>\n//             {/* Return Information */}\n//             <div className=\"details-section\">\n//               <h3>Return Information</h3>\n//               <p><strong>Return Order Number:</strong> {data.return_order_number}</p>\n//               <p><strong>Return Line:</strong> {data.return_order_line}</p>\n//               <p><strong>Return Quantity:</strong> {data.return_qty}</p>\n//               <p><strong>Return Destination:</strong> {data.return_destination}</p>\n//             </div>\n//             {/* Shipping Information (Including Address) */}\n//             <div className=\"details-section\">\n//               <h3>Shipping Information</h3>\n//               <p><strong>Serial Number:</strong> {data.serial_number}</p>\n//               <p><strong>Vendor Item Number:</strong> {data.vendor_item_number}</p>\n//               <p><strong>Shipped To:</strong> {data.shipped_to_person}</p>\n//               <p><strong>Address:</strong> {data.shipped_to_address?.street_number}, {data.shipped_to_address?.city}, {data.shipped_to_address?.state}, {data.shipped_to_address?.country}</p>\n//             </div>\n//             {/* Dimensions */}\n//             <div className=\"details-section\">\n//               <h3>Dimensions</h3>\n//               <p><strong>Depth:</strong> {data.dimensions?.depth}</p>\n//               <p><strong>Length:</strong> {data.dimensions?.length}</p>\n//               <p><strong>Breadth:</strong> {data.dimensions?.breadth}</p>\n//               <p><strong>Weight:</strong> {data.dimensions?.weight}</p>\n//             </div>\n//           </div>\n//           <div className=\"button-container\">\n//             <button className=\"back-button\" onClick={handleBack}>\n//                Back\n//             </button>\n//             <button className=\"proceed-button\" onClick={handleProceed}>\n//               Next \n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ManualScanPage;\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst ManualScanPage = () => {\n    const [orderNumber, setOrderNumber] = useState(\"\");\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    const fetchItemDetails = async () => {\n        try {\n            const response = await axios.get(\n                `http://localhost:8000/item_order_instance`, \n                { params: { order_number: orderNumber } }\n            );\n            if (response.status === 200) {\n                setData(response.data);\n                setError(\"\");\n            } else {\n                setError(\"Failed to fetch item details.\");\n            }\n        } catch (err) {\n            console.error(\"Error fetching item details:\", err);\n            setError(\"An unexpected error occurred while fetching item details.\");\n            setData(null);\n        }\n    };\n\n    const handleProceed = () => {\n        if (data && data.id) {\n            console.log(\"Navigating with Customer ID:\", data.id);\n            navigate(`/upload-images?customerId=${data.id}`);\n        } else {\n            console.error(\"Data does not contain a valid Customer ID:\", data);\n            setError(\"Customer ID is missing. Please complete the scan first.\");\n        }\n    };\n\n    return (\n        <div className=\"manual-scan-page\">\n            <h1>Manual Scan</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter Serial or Return Order Number\"\n                value={orderNumber}\n                onChange={(e) => setOrderNumber(e.target.value)}\n            />\n            <button onClick={fetchItemDetails}>Fetch Details</button>\n            {data && (\n                <div>\n                    <p>Customer ID: {data.id}</p>\n                    <button onClick={handleProceed}>Proceed</button>\n                </div>\n            )}\n            {error && <p>{error}</p>}\n        </div>\n    );\n};\n\nexport default ManualScanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}