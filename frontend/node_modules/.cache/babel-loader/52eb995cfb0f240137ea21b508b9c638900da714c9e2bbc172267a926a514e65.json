{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/InspectionPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/InspectionPage.css\";\n\n// const InspectionPage = () => {\n//   const navigate = useNavigate();\n//   const [selections, setSelections] = useState({\n//     factorySealed: false,\n//     noFactorySeal: false,\n//     minimalTearFactorySeal: false,\n//     noPackage: false,\n//     newCondition: false,\n//     notNewCondition: false,\n//     bioStains: false,\n//     packageStains: false,\n//   });\n\n//   const handleSelectionChange = (event) => {\n//     const { name, checked } = event.target;\n//     setSelections((prev) => ({\n//       ...prev,\n//       [name]: checked,\n//     }));\n//   };\n\n//   const handleProceed = () => {\n//     console.log(\"User Selections:\", selections);\n//     navigate(\"/upload-images\");\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   return (\n//     <div className=\"inspection-page\">\n//       <h1>Product Inspection</h1>\n//       <p className=\"instruction\">\n//         Review the following conditions and select the appropriate options.\n//       </p>\n//       <div className=\"cards-container\">\n//         {/* Package Condition */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Package Condition</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"factorySealed\"\n//                 checked={selections.factorySealed}\n//                 onChange={handleSelectionChange}\n//               />\n//               Factory Sealed\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noFactorySeal\"\n//                 checked={selections.noFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Factory Seal / Teared and not in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"minimalTearFactorySeal\"\n//                 checked={selections.minimalTearFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               Minimal tear but still in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noPackage\"\n//                 checked={selections.noPackage}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Package\n//             </label>\n//           </div>\n//         </div>\n\n//         {/* Additional Options for Factory Sealed */}\n//         {selections.factorySealed && (\n//           <div className=\"card\">\n//             <h3 className=\"card-title\">Product Condition</h3>\n//             <div className=\"card-content\">\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"newCondition\"\n//                   checked={selections.newCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Product in New condition (No visible dirtâ€™s)\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"notNewCondition\"\n//                   checked={selections.notNewCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Not in New condition\n//               </label>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Review Stains */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Review Stains</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"bioStains\"\n//                 checked={selections.bioStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Bio-Stains\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"packageStains\"\n//                 checked={selections.packageStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Package Stains but still new in condition\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"button-container\">\n//         <button className=\"back-button\" onClick={handleBack}>\n//           Back\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"proceed-button\"\n//           onClick={handleProceed}\n//           disabled={!Object.values(selections).some((value) => value === true)}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InspectionPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport \"../styles/InspectionPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InspectionPage = () => {\n  _s();\n  const {\n    setInspectionData\n  } = useContext(InspectionContext);\n  const navigate = useNavigate();\n  const [selections, setSelections] = useState({\n    factorySealed: false,\n    noFactorySeal: false,\n    minimalTearFactorySeal: false,\n    noPackage: false,\n    newCondition: false,\n    notNewCondition: false,\n    bioStains: false,\n    packageStains: false\n  });\n  const handleSelectionChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelections(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleProceed = () => {\n    setInspectionData(selections); // Save inspection data to context\n    navigate(\"/upload-images\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inspection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Inspection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"factorySealed\",\n          onChange: handleSelectionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), \"Factory Sealed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProceed,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(InspectionPage, \"2ZAHrTEybLi1uzj1P4C4LOv7DVo=\", false, function () {\n  return [useNavigate];\n});\n_c = InspectionPage;\nexport default InspectionPage;\nvar _c;\n$RefreshReg$(_c, \"InspectionPage\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","InspectionContext","jsxDEV","_jsxDEV","InspectionPage","_s","setInspectionData","navigate","selections","setSelections","factorySealed","noFactorySeal","minimalTearFactorySeal","noPackage","newCondition","notNewCondition","bioStains","packageStains","handleSelectionChange","event","name","checked","target","prev","handleProceed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/InspectionPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/InspectionPage.css\";\n\n// const InspectionPage = () => {\n//   const navigate = useNavigate();\n//   const [selections, setSelections] = useState({\n//     factorySealed: false,\n//     noFactorySeal: false,\n//     minimalTearFactorySeal: false,\n//     noPackage: false,\n//     newCondition: false,\n//     notNewCondition: false,\n//     bioStains: false,\n//     packageStains: false,\n//   });\n\n//   const handleSelectionChange = (event) => {\n//     const { name, checked } = event.target;\n//     setSelections((prev) => ({\n//       ...prev,\n//       [name]: checked,\n//     }));\n//   };\n\n//   const handleProceed = () => {\n//     console.log(\"User Selections:\", selections);\n//     navigate(\"/upload-images\");\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   return (\n//     <div className=\"inspection-page\">\n//       <h1>Product Inspection</h1>\n//       <p className=\"instruction\">\n//         Review the following conditions and select the appropriate options.\n//       </p>\n//       <div className=\"cards-container\">\n//         {/* Package Condition */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Package Condition</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"factorySealed\"\n//                 checked={selections.factorySealed}\n//                 onChange={handleSelectionChange}\n//               />\n//               Factory Sealed\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noFactorySeal\"\n//                 checked={selections.noFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Factory Seal / Teared and not in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"minimalTearFactorySeal\"\n//                 checked={selections.minimalTearFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               Minimal tear but still in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noPackage\"\n//                 checked={selections.noPackage}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Package\n//             </label>\n//           </div>\n//         </div>\n\n//         {/* Additional Options for Factory Sealed */}\n//         {selections.factorySealed && (\n//           <div className=\"card\">\n//             <h3 className=\"card-title\">Product Condition</h3>\n//             <div className=\"card-content\">\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"newCondition\"\n//                   checked={selections.newCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Product in New condition (No visible dirtâ€™s)\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"notNewCondition\"\n//                   checked={selections.notNewCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Not in New condition\n//               </label>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Review Stains */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Review Stains</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"bioStains\"\n//                 checked={selections.bioStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Bio-Stains\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"packageStains\"\n//                 checked={selections.packageStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Package Stains but still new in condition\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"button-container\">\n//         <button className=\"back-button\" onClick={handleBack}>\n//           Back\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"proceed-button\"\n//           onClick={handleProceed}\n//           disabled={!Object.values(selections).some((value) => value === true)}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InspectionPage;\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InspectionContext } from \"../context/InspectionContext\";\nimport \"../styles/InspectionPage.css\";\n\nconst InspectionPage = () => {\n  const { setInspectionData } = useContext(InspectionContext);\n  const navigate = useNavigate();\n\n  const [selections, setSelections] = useState({\n    factorySealed: false,\n    noFactorySeal: false,\n    minimalTearFactorySeal: false,\n    noPackage: false,\n    newCondition: false,\n    notNewCondition: false,\n    bioStains: false,\n    packageStains: false,\n  });\n\n  const handleSelectionChange = (event) => {\n    const { name, checked } = event.target;\n    setSelections((prev) => ({ ...prev, [name]: checked }));\n  };\n\n  const handleProceed = () => {\n    setInspectionData(selections); // Save inspection data to context\n    navigate(\"/upload-images\");\n  };\n\n  return (\n    <div className=\"inspection-page\">\n      <h1>Product Inspection</h1>\n      <div>\n        <label>\n          <input type=\"checkbox\" name=\"factorySealed\" onChange={handleSelectionChange} />\n          Factory Sealed\n        </label>\n        {/* Other checkboxes */}\n      </div>\n      <button onClick={handleProceed}>Next</button>\n    </div>\n  );\n};\n\nexport default InspectionPage;\n"],"mappingsnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAkB,CAAC,GAAGP,UAAU,CAACE,iBAAiB,CAAC;EAC3D,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC;IAC3CY,aAAa,EAAE,KAAK;IACpBC,aAAa,EAAE,KAAK;IACpBC,sBAAsB,EAAE,KAAK;IAC7BC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,KAAK;IACtBC,SAAS,EAAE,KAAK;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACtCb,aAAa,CAAEc,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAQ,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BlB,iBAAiB,CAACE,UAAU,CAAC,CAAC,CAAC;IAC/BD,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BvB,OAAA;MAAAuB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B3B,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAO4B,IAAI,EAAC,UAAU;UAACX,IAAI,EAAC,eAAe;UAACY,QAAQ,EAAEd;QAAsB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kBAEjF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eACN3B,OAAA;MAAQ8B,OAAO,EAAET,aAAc;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACzB,EAAA,CAtCID,cAAc;EAAA,QAEDJ,WAAW;AAAA;AAAAkC,EAAA,GAFxB9B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}