{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/BaseImageUploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/BaseImageUploadPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BaseImageUploadPage = () => {\n  _s();\n  const [itemNumber, setItemNumber] = useState(\"\");\n  const [frontImage, setFrontImage] = useState(null);\n  const [backImage, setBackImage] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!itemNumber || !frontImage || !backImage) {\n      setNotification(\"Please provide an item number and both images.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"item_number\", itemNumber);\n    formData.append(\"front_image\", frontImage);\n    formData.append(\"back_image\", backImage);\n    try {\n      const response = await axios.post(`http://localhost:8000/upload-base-images/?item_number=${itemNumber}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        setNotification(\"Images uploaded successfully!\");\n      } else {\n        setNotification(\"Failed to upload images. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading images:\", error);\n      setNotification(\"An unexpected error occurred.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-image-upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Base Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"item-number\",\n          children: \"Item Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"item-number\",\n          value: itemNumber,\n          onChange: e => setItemNumber(e.target.value),\n          placeholder: \"Enter Item Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"front-image\",\n          children: \"Front Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"front-image\",\n          accept: \"image/*\",\n          onChange: e => setFrontImage(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back-image\",\n          children: \"Back Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"back-image\",\n          accept: \"image/*\",\n          onChange: e => setBackImage(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button upload-button\",\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseImageUploadPage, \"R+eFeNlXD4fCiMr7pVVn8UEyLZY=\");\n_c = BaseImageUploadPage;\nexport default BaseImageUploadPage;\nvar _c;\n$RefreshReg$(_c, \"BaseImageUploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BaseImageUploadPage","_s","itemNumber","setItemNumber","frontImage","setFrontImage","backImage","setBackImage","notification","setNotification","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","status","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","accept","files","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/BaseImageUploadPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/BaseImageUploadPage.css\";\n\nconst BaseImageUploadPage = () => {\n  const [itemNumber, setItemNumber] = useState(\"\");\n  const [frontImage, setFrontImage] = useState(null);\n  const [backImage, setBackImage] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!itemNumber || !frontImage || !backImage) {\n      setNotification(\"Please provide an item number and both images.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"item_number\", itemNumber);\n    formData.append(\"front_image\", frontImage);\n    formData.append(\"back_image\", backImage);\n\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/upload-base-images/?item_number=${itemNumber}`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        setNotification(\"Images uploaded successfully!\");\n      } else {\n        setNotification(\"Failed to upload images. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading images:\", error);\n      setNotification(\"An unexpected error occurred.\");\n    }\n  };\n\n  return (\n    <div className=\"base-image-upload-page\">\n      <h1>Upload Base Images</h1>\n      <form onSubmit={handleSubmit} className=\"upload-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"item-number\">Item Number:</label>\n          <input\n            type=\"text\"\n            id=\"item-number\"\n            value={itemNumber}\n            onChange={(e) => setItemNumber(e.target.value)}\n            placeholder=\"Enter Item Number\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"front-image\">Front Image:</label>\n          <input\n            type=\"file\"\n            id=\"front-image\"\n            accept=\"image/*\"\n            onChange={(e) => setFrontImage(e.target.files[0])}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"back-image\">Back Image:</label>\n          <input\n            type=\"file\"\n            id=\"back-image\"\n            accept=\"image/*\"\n            onChange={(e) => setBackImage(e.target.files[0])}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"button upload-button\">\n          Upload Images\n        </button>\n      </form>\n      {notification && <p className=\"notification\">{notification}</p>}\n    </div>\n  );\n};\n\nexport default BaseImageUploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}