{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/auditly/frontend/src/pages/InspectionPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/InspectionPage.css\";\n\n// const InspectionPage = () => {\n//   const navigate = useNavigate();\n//   const [selections, setSelections] = useState({\n//     factorySealed: false,\n//     noFactorySeal: false,\n//     minimalTearFactorySeal: false,\n//     noPackage: false,\n//     newCondition: false,\n//     notNewCondition: false,\n//     bioStains: false,\n//     packageStains: false,\n//   });\n\n//   const handleSelectionChange = (event) => {\n//     const { name, checked } = event.target;\n//     setSelections((prev) => ({\n//       ...prev,\n//       [name]: checked,\n//     }));\n//   };\n\n//   const handleProceed = () => {\n//     console.log(\"User Selections:\", selections);\n//     navigate(\"/upload-images\");\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   return (\n//     <div className=\"inspection-page\">\n//       <h1>Product Inspection</h1>\n//       <p className=\"instruction\">\n//         Review the following conditions and select the appropriate options.\n//       </p>\n//       <div className=\"cards-container\">\n//         {/* Package Condition */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Package Condition</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"factorySealed\"\n//                 checked={selections.factorySealed}\n//                 onChange={handleSelectionChange}\n//               />\n//               Factory Sealed\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noFactorySeal\"\n//                 checked={selections.noFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Factory Seal / Teared and not in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"minimalTearFactorySeal\"\n//                 checked={selections.minimalTearFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               Minimal tear but still in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noPackage\"\n//                 checked={selections.noPackage}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Package\n//             </label>\n//           </div>\n//         </div>\n\n//         {/* Additional Options for Factory Sealed */}\n//         {selections.factorySealed && (\n//           <div className=\"card\">\n//             <h3 className=\"card-title\">Product Condition</h3>\n//             <div className=\"card-content\">\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"newCondition\"\n//                   checked={selections.newCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Product in New condition (No visible dirtâ€™s)\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"notNewCondition\"\n//                   checked={selections.notNewCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Not in New condition\n//               </label>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Review Stains */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Review Stains</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"bioStains\"\n//                 checked={selections.bioStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Bio-Stains\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"packageStains\"\n//                 checked={selections.packageStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Package Stains but still new in condition\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"button-container\">\n//         <button className=\"back-button\" onClick={handleBack}>\n//           Back\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"proceed-button\"\n//           onClick={handleProceed}\n//           disabled={!Object.values(selections).some((value) => value === true)}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InspectionPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/InspectionPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InspectionPage = ({\n  setInspectionData,\n  customerItemDataId\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [selections, setSelections] = useState({\n    factorySealed: false,\n    noFactorySeal: false,\n    minimalTearFactorySeal: false,\n    noPackage: false,\n    newCondition: false,\n    notNewCondition: false,\n    bioStains: false,\n    packageStains: false\n  });\n  const handleSelectionChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelections(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleProceed = () => {\n    // Save boolean selections for the next page\n    setInspectionData({\n      ...selections,\n      customer_item_data_id: customerItemDataId\n    });\n    navigate(\"/upload-images\");\n  };\n  const handleBack = () => {\n    navigate(-1); // Go back to the previous page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inspection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Inspection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instruction\",\n      children: \"Review the following conditions and select the appropriate options.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Package Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"factorySealed\",\n              checked: selections.factorySealed,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), \"Factory Sealed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"noFactorySeal\",\n              checked: selections.noFactorySeal,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), \"No Factory Seal / Teared and not in Factory Seal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"minimalTearFactorySeal\",\n              checked: selections.minimalTearFactorySeal,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), \"Minimal tear but still in Factory Seal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"noPackage\",\n              checked: selections.noPackage,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), \"No Package\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), selections.factorySealed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Product Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"newCondition\",\n              checked: selections.newCondition,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), \"Product in New condition (No visible dirt\\u2019s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"notNewCondition\",\n              checked: selections.notNewCondition,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), \"Not in New condition\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Review Stains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"bioStains\",\n              checked: selections.bioStains,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), \"Bio-Stains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"packageStains\",\n              checked: selections.packageStains,\n              onChange: handleSelectionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), \"Package Stains but still new in condition\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"proceed-button\",\n        onClick: handleProceed,\n        disabled: !Object.values(selections).some(value => value === true),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(InspectionPage, \"jH3sKBmMrd0hcfQRygjGKSIJpXo=\", false, function () {\n  return [useNavigate];\n});\n_c = InspectionPage;\nexport default InspectionPage;\nvar _c;\n$RefreshReg$(_c, \"InspectionPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InspectionPage","setInspectionData","customerItemDataId","_s","navigate","selections","setSelections","factorySealed","noFactorySeal","minimalTearFactorySeal","noPackage","newCondition","notNewCondition","bioStains","packageStains","handleSelectionChange","event","name","checked","target","prev","handleProceed","customer_item_data_id","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","Object","values","some","value","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/auditly/frontend/src/pages/InspectionPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/InspectionPage.css\";\n\n// const InspectionPage = () => {\n//   const navigate = useNavigate();\n//   const [selections, setSelections] = useState({\n//     factorySealed: false,\n//     noFactorySeal: false,\n//     minimalTearFactorySeal: false,\n//     noPackage: false,\n//     newCondition: false,\n//     notNewCondition: false,\n//     bioStains: false,\n//     packageStains: false,\n//   });\n\n//   const handleSelectionChange = (event) => {\n//     const { name, checked } = event.target;\n//     setSelections((prev) => ({\n//       ...prev,\n//       [name]: checked,\n//     }));\n//   };\n\n//   const handleProceed = () => {\n//     console.log(\"User Selections:\", selections);\n//     navigate(\"/upload-images\");\n//   };\n\n//   const handleBack = () => {\n//     navigate(-1); // Navigate to the previous page\n//   };\n\n//   return (\n//     <div className=\"inspection-page\">\n//       <h1>Product Inspection</h1>\n//       <p className=\"instruction\">\n//         Review the following conditions and select the appropriate options.\n//       </p>\n//       <div className=\"cards-container\">\n//         {/* Package Condition */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Package Condition</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"factorySealed\"\n//                 checked={selections.factorySealed}\n//                 onChange={handleSelectionChange}\n//               />\n//               Factory Sealed\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noFactorySeal\"\n//                 checked={selections.noFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Factory Seal / Teared and not in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"minimalTearFactorySeal\"\n//                 checked={selections.minimalTearFactorySeal}\n//                 onChange={handleSelectionChange}\n//               />\n//               Minimal tear but still in Factory Seal\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"noPackage\"\n//                 checked={selections.noPackage}\n//                 onChange={handleSelectionChange}\n//               />\n//               No Package\n//             </label>\n//           </div>\n//         </div>\n\n//         {/* Additional Options for Factory Sealed */}\n//         {selections.factorySealed && (\n//           <div className=\"card\">\n//             <h3 className=\"card-title\">Product Condition</h3>\n//             <div className=\"card-content\">\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"newCondition\"\n//                   checked={selections.newCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Product in New condition (No visible dirtâ€™s)\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"notNewCondition\"\n//                   checked={selections.notNewCondition}\n//                   onChange={handleSelectionChange}\n//                 />\n//                 Not in New condition\n//               </label>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Review Stains */}\n//         <div className=\"card\">\n//           <h3 className=\"card-title\">Review Stains</h3>\n//           <div className=\"card-content\">\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"bioStains\"\n//                 checked={selections.bioStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Bio-Stains\n//             </label>\n//             <label className=\"checkbox-label\">\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"packageStains\"\n//                 checked={selections.packageStains}\n//                 onChange={handleSelectionChange}\n//               />\n//               Package Stains but still new in condition\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"button-container\">\n//         <button className=\"back-button\" onClick={handleBack}>\n//           Back\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"proceed-button\"\n//           onClick={handleProceed}\n//           disabled={!Object.values(selections).some((value) => value === true)}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InspectionPage;\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/InspectionPage.css\";\n\nconst InspectionPage = ({ setInspectionData, customerItemDataId }) => {\n  const navigate = useNavigate();\n  const [selections, setSelections] = useState({\n    factorySealed: false,\n    noFactorySeal: false,\n    minimalTearFactorySeal: false,\n    noPackage: false,\n    newCondition: false,\n    notNewCondition: false,\n    bioStains: false,\n    packageStains: false,\n  });\n\n  const handleSelectionChange = (event) => {\n    const { name, checked } = event.target;\n    setSelections((prev) => ({\n      ...prev,\n      [name]: checked,\n    }));\n  };\n\n  const handleProceed = () => {\n    // Save boolean selections for the next page\n    setInspectionData({\n      ...selections,\n      customer_item_data_id: customerItemDataId,\n    });\n    navigate(\"/upload-images\");\n  };\n\n  const handleBack = () => {\n    navigate(-1); // Go back to the previous page\n  };\n\n  return (\n    <div className=\"inspection-page\">\n      <h1>Product Inspection</h1>\n      <p className=\"instruction\">\n        Review the following conditions and select the appropriate options.\n      </p>\n      <div className=\"cards-container\">\n        {/* Package Condition */}\n        <div className=\"card\">\n          <h3 className=\"card-title\">Package Condition</h3>\n          <div className=\"card-content\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"factorySealed\"\n                checked={selections.factorySealed}\n                onChange={handleSelectionChange}\n              />\n              Factory Sealed\n            </label>\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"noFactorySeal\"\n                checked={selections.noFactorySeal}\n                onChange={handleSelectionChange}\n              />\n              No Factory Seal / Teared and not in Factory Seal\n            </label>\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"minimalTearFactorySeal\"\n                checked={selections.minimalTearFactorySeal}\n                onChange={handleSelectionChange}\n              />\n              Minimal tear but still in Factory Seal\n            </label>\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"noPackage\"\n                checked={selections.noPackage}\n                onChange={handleSelectionChange}\n              />\n              No Package\n            </label>\n          </div>\n        </div>\n\n        {/* Additional Options for Factory Sealed */}\n        {selections.factorySealed && (\n          <div className=\"card\">\n            <h3 className=\"card-title\">Product Condition</h3>\n            <div className=\"card-content\">\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"newCondition\"\n                  checked={selections.newCondition}\n                  onChange={handleSelectionChange}\n                />\n                Product in New condition (No visible dirtâ€™s)\n              </label>\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"notNewCondition\"\n                  checked={selections.notNewCondition}\n                  onChange={handleSelectionChange}\n                />\n                Not in New condition\n              </label>\n            </div>\n          </div>\n        )}\n\n        {/* Review Stains */}\n        <div className=\"card\">\n          <h3 className=\"card-title\">Review Stains</h3>\n          <div className=\"card-content\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"bioStains\"\n                checked={selections.bioStains}\n                onChange={handleSelectionChange}\n              />\n              Bio-Stains\n            </label>\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"packageStains\"\n                checked={selections.packageStains}\n                onChange={handleSelectionChange}\n              />\n              Package Stains but still new in condition\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"button-container\">\n        <button className=\"back-button\" onClick={handleBack}>\n          Back\n        </button>\n        <button\n          type=\"button\"\n          className=\"proceed-button\"\n          onClick={handleProceed}\n          disabled={!Object.values(selections).some((value) => value === true)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InspectionPage;\n"],"mappingsvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC;IAC3CW,aAAa,EAAE,KAAK;IACpBC,aAAa,EAAE,KAAK;IACpBC,sBAAsB,EAAE,KAAK;IAC7BC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,KAAK;IACtBC,SAAS,EAAE,KAAK;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACtCb,aAAa,CAAEc,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACApB,iBAAiB,CAAC;MAChB,GAAGI,UAAU;MACbiB,qBAAqB,EAAEpB;IACzB,CAAC,CAAC;IACFE,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC;EAED,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACvBnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B1B,OAAA;MAAA0B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B9B,OAAA;MAAGyB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAE3B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ9B,OAAA;MAAKyB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAE9B1B,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB1B,OAAA;UAAIyB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD9B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B1B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,eAAe;cACpBC,OAAO,EAAEb,UAAU,CAACE,aAAc;cAClCwB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,kBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,eAAe;cACpBC,OAAO,EAAEb,UAAU,CAACG,aAAc;cAClCuB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,oDAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,wBAAwB;cAC7BC,OAAO,EAAEb,UAAU,CAACI,sBAAuB;cAC3CsB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,0CAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,WAAW;cAChBC,OAAO,EAAEb,UAAU,CAACK,SAAU;cAC9BqB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,cAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLxB,UAAU,CAACE,aAAa,iBACvBR,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB1B,OAAA;UAAIyB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD9B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B1B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,cAAc;cACnBC,OAAO,EAAEb,UAAU,CAACM,YAAa;cACjCoB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,qDAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,iBAAiB;cACtBC,OAAO,EAAEb,UAAU,CAACO,eAAgB;cACpCmB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,wBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGD9B,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB1B,OAAA;UAAIyB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7C9B,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B1B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,WAAW;cAChBC,OAAO,EAAEb,UAAU,CAACQ,SAAU;cAC9BkB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,cAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YAAOyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B1B,OAAA;cACE+B,IAAI,EAAC,UAAU;cACfb,IAAI,EAAC,eAAe;cACpBC,OAAO,EAAEb,UAAU,CAACS,aAAc;cAClCiB,QAAQ,EAAEhB;YAAsB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,6CAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9B,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1B,OAAA;QAAQyB,SAAS,EAAC,aAAa;QAACQ,OAAO,EAAET,UAAW;QAAAE,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9B,OAAA;QACE+B,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,gBAAgB;QAC1BQ,OAAO,EAAEX,aAAc;QACvBY,QAAQ,EAAE,CAACC,MAAM,CAACC,MAAM,CAAC9B,UAAU,CAAC,CAAC+B,IAAI,CAAEC,KAAK,IAAKA,KAAK,KAAK,IAAI,CAAE;QAAAZ,QAAA,EACtE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxJIH,cAAc;EAAA,QACDH,WAAW;AAAA;AAAAyC,EAAA,GADxBtC,cAAc;AA0JpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}